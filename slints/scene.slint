// Copyright Â© SixtyFPS GmbH <info@slint.dev>
// SPDX-License-Identifier: MIT

import { Slider, GroupBox, HorizontalBox, VerticalBox, GridBox, Button } from "std-widgets.slint";

export component App inherits Window {
    in property <image> texture <=> image.source;
    out property <int> requested-texture-width: image.width/1phx;
    out property <int> requested-texture-height: image.height/1phx;
    // Define the callback that will be implemented in Rust
    callback adjust_camera(string);
    callback mouse_down(PointerEventButton);
    callback mouse_up(PointerEventButton);

    callback zoom(length);
    callback mouse_move(length, length);

    preferred-width: 500px;
    preferred-height: 600px;
    title: "Amislicer";
    HorizontalBox {
        VerticalBox {
            width: 200px;
            Text {
                text: "Text";
                wrap: word-wrap;
            }
        }
        VerticalBox {
            image := Image {
                min-width: 400px;
                min-height: 400px;
                height: 100%;
                TouchArea {
                    scroll-event(e) => {
                        if e.delta-y > 0 {
                            root.zoom(e.delta-y);
                            return accept;
                        } else if e.delta-y < 0 {
                            root.zoom(e.delta-y);
                            return accept;
                        }
                        return reject;
                    }
                    
                    pointer-event(event) => {
                        if (event.kind == PointerEventKind.move) {
                            mouse_move(self.mouse_x, self.mouse-y);
                        } else if (event.kind == PointerEventKind.down) {
                            mouse_down(event.button);
                        } else if (event.kind == PointerEventKind.up) {
                            mouse_up(event.button);
                        }
                    }
                }
            }  
        }
        VerticalBox {
            width: 200px;
            spacing: 10px; // 

            // Camera control buttons
            Button {
                text: "Up";
                clicked => {adjust_camera("up");}
            }
            Button {
                text: "Down";
                clicked => {adjust_camera("down");}
            }
            Button {
                text: "Left";
                clicked => {adjust_camera("left");}
            }
            Button {
                text: "Right";
                clicked => {adjust_camera("right");}
            }
            Button {
                text: "Zoom In";
                clicked => {adjust_camera("zoom_in");}
            }
            Button {
                text: "Zoom Out";
                clicked => {adjust_camera("zoom_out");}
            }
        }
    }
}
    

